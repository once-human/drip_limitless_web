<div class="valign tag_welcome">
	<div class="tag_wel_upper">
		<?php echo Wo_LoadPage('welcome/welcome-header');?>
	</div>
	<div class="tag_wel_middle">
		<div class="container">
			<div class="wow_content tag_auth_box tag_auth_box_auto">
				<div class="valign tag_auth_animation d-none"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 367.805 367.805" xml:space="preserve"> <g> <path style="fill:#3BB54A;" d="M183.903,0.001c101.566,0,183.902,82.336,183.902,183.902s-82.336,183.902-183.902,183.902 S0.001,285.469,0.001,183.903l0,0C-0.288,82.625,81.579,0.29,182.856,0.001C183.205,0,183.554,0,183.903,0.001z"/> <polygon style="fill:#fff;" points="285.78,133.225 155.168,263.837 82.025,191.217 111.805,161.96 155.168,204.801 256.001,103.968"/> </g></svg><?php echo $wo['lang']['welcome_'] ?></div>
				<form id="reset-form" method="post">
					<p class="title"><?php echo $wo['lang']['reset_new_password_label']?></p>
					<div class="errors"></div>
					<label class="tag_field">
						<input name="password" type="text" id="password" autocomplete="off" placeholder=" " autofocus required>
						<span><?php echo $wo['lang']['new_password']?></span>
					</label>
					<?php if ($wo['config']['password_complexity_system'] == 1) { ?>
						<ul class="list-unstyled helper-text">
							<li class="length"><?php echo $wo['lang']['least_characters']; ?></li>
							<li class="lowercase"><?php echo $wo['lang']['contain_lowercase']; ?></li>
							<li class="uppercase"><?php echo $wo['lang']['contain_uppercase']; ?></li>
							<li class="special"><?php echo $wo['lang']['number_special']; ?></li>
						</ul>
					<?php } ?>
					<input type="hidden" name="id" value="<?php echo $_GET['code'];?>">
					<button type="submit" class="btn btn-main btn-mat tag_wel_btn"><?php echo $wo['lang']['reset_password']?></button>
				</form>
			</div>
		</div>
	</div>
	<div class="tag_wel_bottom">
		<?php echo Wo_LoadPage('footer/welcome');?>
	</div>
</div>

<script>
var working = false;
var $this = $('#reset-form');
var $state = $this.find('.errors');
var $login_anim = $('.tag_auth_animation');

$(function() {
	$this.ajaxForm({
		url: Wo_Ajax_Requests_File() + '?f=reset_password',
		beforeSend: function() {
			<?php if ($wo['config']['password_complexity_system'] == 1) { ?>
				if ($('.helper-text .length').hasClass('valid') && $('.helper-text .lowercase').hasClass('valid') && $('.helper-text .uppercase').hasClass('valid') && $('.helper-text .special').hasClass('valid')) {
					working = true;
					$this.find('button').attr("disabled", true);
				}
				else{
					$state.html("<?php echo($wo['lang']['complexity_requirements']) ?>");
					return false;
				}
			<?php } else{ ?>
				working = true;
				$this.find('button').attr("disabled", true);
			<?php } ?>
		},
		success: function(data) {
			if (data.status == 200 || data.status == 600) {
				$login_anim.removeClass('d-none');
				setTimeout(function () {
					window.location.href = data.location;
				}, 1000);
			} else {
				$this.find('button').attr("disabled", false);
				$state.html(data.errors);
			} 
			working = false;
		}
	});
});

<?php if ($wo['config']['password_complexity_system'] == 1) { ?>
(function(){
	var helperText = {
		charLength: document.querySelector('.helper-text .length'),
		lowercase: document.querySelector('.helper-text .lowercase'),
		uppercase: document.querySelector('.helper-text .uppercase'),
		special: document.querySelector('.helper-text .special')
	};
	var password = document.querySelector('#password');
	var pattern = {
		charLength: function() {
			if( password.value.length >= 6 ) {
				return true;
			}
		},
		lowercase: function() {
			var regex = /^(?=.*[a-z]).+$/;
			if( regex.test(password.value) ) {
				return true;
			}
		},
		uppercase: function() {
			var regex = /^(?=.*[A-Z]).+$/;
			if( regex.test(password.value) ) {
				return true;
			}
		},
		special: function() {
			var regex = /^(?=.*[0-9_\W]).+$/;
			if( regex.test(password.value) ) {
				return true;
			}
		}   
	};
	password.addEventListener('keyup', function (){
  	    $('.helper-text').slideDown('slow', function() {

  	    });
		patternTest( pattern.charLength(), helperText.charLength );
		patternTest( pattern.lowercase(), helperText.lowercase );
		patternTest( pattern.uppercase(), helperText.uppercase );
		patternTest( pattern.special(), helperText.special );
		if( hasClass(helperText.charLength, 'valid') &&
			  hasClass(helperText.lowercase, 'valid') && 
			 	hasClass(helperText.uppercase, 'valid') && 
			  hasClass(helperText.special, 'valid')
		) {
			addClass(password.parentElement, 'valid');
		}
		else {
			removeClass(password.parentElement, 'valid');
		}
	});
	function patternTest(pattern, response) {
		if(pattern) {
			addClass(response, 'valid');
		}
		else {
			removeClass(response, 'valid');
		}
	}
	function addClass(el, className) {
		if (el.classList) {
			el.classList.add(className);
		}
		else {
			el.className += ' ' + className;
		}
	}
	function removeClass(el, className) {
		if (el.classList)
				el.classList.remove(className);
			else
				el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
	}
	function hasClass(el, className) {
		if (el.classList) {
			console.log(el.classList);
			return el.classList.contains(className);	
		}
		else {
			new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);	
		}
	}
})();
<?php } ?>
</script>